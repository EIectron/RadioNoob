typedef __INT8_TYPE__ s8;
typedef __INT16_TYPE__ s16;
typedef __INT32_TYPE__ s32;
typedef __UINT8_TYPE__ u8;
typedef __UINT16_TYPE__ u16;
typedef __UINT32_TYPE__ u32;
typedef __UINT64_TYPE__ u64;

#define CRSF_MAX_CHUNK_SIZE   58   // 64 - header - type - destination - origin
#define CRSF_MAX_CHUNKS        8   // not in specification. Max observed is 5 for ELRS 2.3 (HappyModel ES2400TX)   
#define CRSF_MAX_PARAMS       23 
#define CRSF_MAX_PACKET_LEN   64

enum data_type {
    UINT8          = 0,
    INT8           = 1,
    UINT16         = 2,
    INT16          = 3,
    FLOAT          = 8,
    TEXT_SELECTION = 9,
    STRING         = 10,
    FOLDER         = 11,
    INFO           = 12,
    COMMAND        = 13,
    OUT_OF_RANGE   = 127,
};

typedef struct {
    // common fields
    u8 device;            // device index of device parameter belongs to
    u8 id;                // Parameter number (starting from 1)
    u8 parent;            // Parent folder parameter number of the parent folder, 0 means root
    u8 chunk;
    enum data_type type;  // (Parameter type definitions and hidden bit)
    u8 hidden;            // set if hidden
    char *name;           // Null-terminated string
    char *options[50];    // size depending on data type
    void *value;
    u8 status;
    u8 count;

    // field presence depends on type
    u8 default_value;     // size depending on data type. Not present for COMMAND.
    u8 current_value;
    s32 min_value;        // not sent for string type
    s32 max_value;        // not sent for string type
    s32 step;             // Step size ( type float only otherwise this entry is not sent )
    u8 timeout;           // COMMAND timeout (100ms/count)
    u8 changed;           // flag if set needed when edit element is de-selected
    char *max_str;        // Longest choice length for text select
    union {
        u8 point;             // Decimal point ( type float only otherwise this entry is not sent )
        u8 text_sel;          // current value index for TEXT_SELECTION type
        u8 string_max_len;    // String max length ( for string type only )
        u8 status;            // Status for COMMANDs
    } u;
    union {
        char *info;
        char *unit;         // Unit ( Null-terminated string / not sent for type string and folder )
    } s;
} crsf_param_t;

enum cmd_status {
    READY               = 0,
    START               = 1,
    PROGRESS            = 2,
    CONFIRMATION_NEEDED = 3,
    CONFIRM             = 4,
    CANCEL              = 5,
    POLL                = 6
};

static struct {
    crsf_param_t *param;
    u32 time;
    u16 timeout;
    u8  dialog;
} command;

// Param: HooJ 
char param0[CRSF_MAX_PACKET_LEN] = {0xEA, 0x19, 0x2B, 0xEA, 0xEE, 0x0, 0x0, 0x0, 0xB, 0x48, 0x6F, 0x6F, 0x4A, 0x1, 0x2, 0x3, 0x4, 0x5, 0x9, 0xF, 0x12, 0x13, 0x14, 0x15, 0xFF, 0x0, 0x35, 0x3, 0x2, 0x15, 0x0, 0x8B, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0};

// Param: Packet Rate, 50Hz(-115dBm);100Hz Full(-112dBm);150Hz(
char param1_1[CRSF_MAX_PACKET_LEN] = {0xEA, 0x3E, 0x2B, 0xEA, 0xEE, 0x1, 0x3, 0x0, 0x9, 0x50, 0x61, 0x63, 0x6B, 0x65, 0x74, 0x20, 0x52, 0x61, 0x74, 0x65, 0x0, 0x35, 0x30, 0x48, 0x7A, 0x28, 0x2D, 0x31, 0x31, 0x35, 0x64, 0x42, 0x6D, 0x29, 0x3B, 0x31, 0x30, 0x30, 0x48, 0x7A, 0x20, 0x46, 0x75, 0x6C, 0x6C, 0x28, 0x2D, 0x31, 0x31, 0x32, 0x64, 0x42, 0x6D, 0x29, 0x3B, 0x31, 0x35, 0x30, 0x48, 0x7A, 0x28, 0x2D, 0x31, 0x8A};

// Param: dBm);250Hz(-108dBm);333Hz Full(-105dBm);500Hz(-105dB%:, Hz Full(-105dBm);500Hz(-105dB%:
char param1_2[CRSF_MAX_PACKET_LEN] = {0xEA, 0x3E, 0x2B, 0xEA, 0xEE, 0x1, 0x2, 0x31, 0x32, 0x64, 0x42, 0x6D, 0x29, 0x3B, 0x32, 0x35, 0x30, 0x48, 0x7A, 0x28, 0x2D, 0x31, 0x30, 0x38, 0x64, 0x42, 0x6D, 0x29, 0x3B, 0x33, 0x33, 0x33, 0x48, 0x7A, 0x20, 0x46, 0x75, 0x6C, 0x6C, 0x28, 0x2D, 0x31, 0x30, 0x35, 0x64, 0x42, 0x6D, 0x29, 0x3B, 0x35, 0x30, 0x30, 0x48, 0x7A, 0x28, 0x2D, 0x31, 0x30, 0x35, 0x64, 0x42, 0x6D, 0x29, 0xE};


// Param: 250(-104dBm);D500(-104dBm);F500(-104dBm);F1000(-104d%:, Bm);F500(-104dBm);F1000(-104d%:
char param1_3[CRSF_MAX_PACKET_LEN] = {0xEA, 0x3E, 0x2B, 0xEA, 0xEE, 0x1, 0x1, 0x3B, 0x44, 0x32, 0x35, 0x30, 0x28, 0x2D, 0x31, 0x30, 0x34, 0x64, 0x42, 0x6D, 0x29, 0x3B, 0x44, 0x35, 0x30, 0x30, 0x28, 0x2D, 0x31, 0x30, 0x34, 0x64, 0x42, 0x6D, 0x29, 0x3B, 0x46, 0x35, 0x30, 0x30, 0x28, 0x2D, 0x31, 0x30, 0x34, 0x64, 0x42, 0x6D, 0x29, 0x3B, 0x46, 0x31, 0x30, 0x30, 0x30, 0x28, 0x2D, 0x31, 0x30, 0x34, 0x64, 0x42, 0x6D, 0xE8};

char param1_4[CRSF_MAX_PACKET_LEN] = {0xEA, 0xD, 0x2B, 0xEA, 0xEE, 0x1, 0x0, 0x29, 0x0, 0x3, 0x0, 0x9, 0x0, 0x0, 0xB, 0x30, 0x34, 0x64, 0x42, 0x6D, 0x29, 0x3B, 0x44, 0x35, 0x30, 0x30, 0x28, 0x2D, 0x31, 0x30, 0x34, 0x64, 0x42, 0x6D, 0x29, 0x3B, 0x46, 0x35, 0x30, 0x30, 0x28, 0x2D, 0x31, 0x30, 0x34, 0x64, 0x42, 0x6D, 0x29, 0x3B, 0x46, 0x31, 0x30, 0x30, 0x30, 0x28, 0x2D, 0x31, 0x30, 0x34, 0x64, 0x42, 0x6D, 0xE8};

// Param: Telem Ratio, Std;Off;1:128;1:64;1:32;1:16;1:8;1:4;1:2
char param2[CRSF_MAX_PACKET_LEN] = {0xEA, 0x3E, 0x2B, 0xEA, 0xEE, 0x2, 0x1, 0x0, 0x9, 0x54, 0x65, 0x6C, 0x65, 0x6D, 0x20, 0x52, 0x61, 0x74, 0x69, 0x6F, 0x0, 0x53, 0x74, 0x64, 0x3B, 0x4F, 0x66, 0x66, 0x3B, 0x31, 0x3A, 0x31, 0x32, 0x38, 0x3B, 0x31, 0x3A, 0x36, 0x34, 0x3B, 0x31, 0x3A, 0x33, 0x32, 0x3B, 0x31, 0x3A, 0x31, 0x36, 0x3B, 0x31, 0x3A, 0x38, 0x3B, 0x31, 0x3A, 0x34, 0x3B, 0x31, 0x3A, 0x32, 0x3B, 0x52, 0xB8};

// Param: Switch Mode, Wide;Hybrid
char param3[CRSF_MAX_PACKET_LEN] = {0xEA, 0x25, 0x2B, 0xEA, 0xEE, 0x3, 0x0, 0x0, 0x9, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x4D, 0x6F, 0x64, 0x65, 0x0, 0x57, 0x69, 0x64, 0x65, 0x3B, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x83, 0x3B, 0x31, 0x3A, 0x33, 0x32, 0x3B, 0x31, 0x3A, 0x31, 0x36, 0x3B, 0x31, 0x3A, 0x38, 0x3B, 0x31, 0x3A, 0x34, 0x3B, 0x31, 0x3A, 0x32, 0x3B, 0x52, 0xB8};

// Param: Model Match, Off;On
char param4[CRSF_MAX_PACKET_LEN] = {0xEA, 0x28, 0x2B, 0xEA, 0xEE, 0x4, 0x0, 0x0, 0x9, 0x4D, 0x6F, 0x64, 0x65, 0x6C, 0x20, 0x4D, 0x61, 0x74, 0x63, 0x68, 0x0, 0x4F, 0x66, 0x66, 0x3B, 0x4F, 0x6E, 0x0, 0x0, 0x0, 0x1, 0x0, 0x20, 0x28, 0x49, 0x44, 0x3A, 0x20, 0x30, 0x29, 0x0, 0xAD, 0x33, 0x32, 0x3B, 0x31, 0x3A, 0x31, 0x36, 0x3B, 0x31, 0x3A, 0x38, 0x3B, 0x31, 0x3A, 0x34, 0x3B, 0x31, 0x3A, 0x32, 0x3B, 0x52, 0xB8};

// Param: TX Power (100mW,
char param5[CRSF_MAX_PACKET_LEN] = {0xEA, 0x19, 0x2B, 0xEA, 0xEE, 0x5, 0x0, 0x0, 0xB, 0x54, 0x58, 0x20, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x20, 0x28, 0x31, 0x30, 0x30, 0x6D, 0x57, 0x29, 0x0, 0xA3, 0x0, 0x0, 0x0, 0x1, 0x0, 0x20, 0x28, 0x49, 0x44, 0x3A, 0x20, 0x30, 0x29, 0x0, 0xAD, 0x33, 0x32, 0x3B, 0x31, 0x3A, 0x31, 0x36, 0x3B, 0x31, 0x3A, 0x38, 0x3B, 0x31, 0x3A, 0x34, 0x3B, 0x31, 0x3A, 0x32, 0x3B, 0x52, 0xB8};

// Param: Max Power, 10;25;50;100;250
char param6[CRSF_MAX_PACKET_LEN] = {0xEA, 0x2A, 0x2B, 0xEA, 0xEE, 0x6, 0x0, 0x5, 0x9, 0x4D, 0x61, 0x78, 0x20, 0x50, 0x6F, 0x77, 0x65, 0x72, 0x0, 0x31, 0x30, 0x3B, 0x32, 0x35, 0x3B, 0x35, 0x30, 0x3B, 0x31, 0x30, 0x30, 0x3B, 0x32, 0x35, 0x30, 0x0, 0x3, 0x0, 0x4, 0x0, 0x6D, 0x57, 0x0, 0x6F, 0x3B, 0x31, 0x3A, 0x31, 0x36, 0x3B, 0x31, 0x3A, 0x38, 0x3B, 0x31, 0x3A, 0x34, 0x3B, 0x31, 0x3A, 0x32, 0x3B, 0x52, 0xB8};

// Param: Dynamic, Off;Dyn;AUX9;AUX10;AUX11;AUX12:8;1:4;1:2
char param7[CRSF_MAX_PACKET_LEN] = {0xEA, 0x34, 0x2B, 0xEA, 0xEE, 0x7, 0x0, 0x5, 0x9, 0x44, 0x79, 0x6E, 0x61, 0x6D, 0x69, 0x63, 0x0, 0x4F, 0x66, 0x66, 0x3B, 0x44, 0x79, 0x6E, 0x3B, 0x41, 0x55, 0x58, 0x39, 0x3B, 0x41, 0x55, 0x58, 0x31, 0x30, 0x3B, 0x41, 0x55, 0x58, 0x31, 0x31, 0x3B, 0x41, 0x55, 0x58, 0x31, 0x32, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0x3D, 0x31, 0x3A, 0x34, 0x3B, 0x31, 0x3A, 0x32, 0x3B, 0x52, 0xB8};

// Param: Fan Thresh, 10mW;25mW;50mW;100mW;250mW;500mW;1000mW;2
char param8[CRSF_MAX_PACKET_LEN] = {0xEA, 0x3E, 0x2B, 0xEA, 0xEE, 0x8, 0x1, 0x5, 0x9, 0x46, 0x61, 0x6E, 0x20, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x0, 0x31, 0x30, 0x6D, 0x57, 0x3B, 0x32, 0x35, 0x6D, 0x57, 0x3B, 0x35, 0x30, 0x6D, 0x57, 0x3B, 0x31, 0x30, 0x30, 0x6D, 0x57, 0x3B, 0x32, 0x35, 0x30, 0x6D, 0x57, 0x3B, 0x35, 0x30, 0x30, 0x6D, 0x57, 0x3B, 0x31, 0x30, 0x30, 0x30, 0x6D, 0x57, 0x3B, 0x32, 0x30, 0x30, 0xE7};

//Param: VTX Administrato,
char param9[CRSF_MAX_PACKET_LEN] = {0xEA, 0x1A, 0x2B, 0xEA, 0xEE, 0x9, 0x0, 0x0, 0xB, 0x56, 0x54, 0x58, 0x20, 0x41, 0x64, 0x6D, 0x69, 0x6E, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6F, 0x72, 0x0, 0x30, 0x57, 0x3B, 0x35, 0x30, 0x6D, 0x57, 0x3B, 0x31, 0x30, 0x30, 0x6D, 0x57, 0x3B, 0x32, 0x35, 0x30, 0x6D, 0x57, 0x3B, 0x35, 0x30, 0x30, 0x6D, 0x57, 0x3B, 0x31, 0x30, 0x30, 0x30, 0x6D, 0x57, 0x3B, 0x32, 0x30, 0x30, 0xE7};

//Param: Band, Off;A;B;E;F;R;L
char param10[CRSF_MAX_PACKET_LEN] = {0xEA, 0x22, 0x2B, 0xEA, 0xEE, 0xA, 0x0, 0x9, 0x9, 0x42, 0x61, 0x6E, 0x64, 0x0, 0x4F, 0x66, 0x66, 0x3B, 0x41, 0x3B, 0x42, 0x3B, 0x45, 0x3B, 0x46, 0x3B, 0x52, 0x3B, 0x4C, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0xF2, 0x30, 0x30, 0x6D, 0x57, 0x3B, 0x32, 0x35, 0x30, 0x6D, 0x57, 0x3B, 0x35, 0x30, 0x30, 0x6D, 0x57, 0x3B, 0x31, 0x30, 0x30, 0x30, 0x6D, 0x57, 0x3B, 0x32, 0x30, 0x30, 0xE7};

// Param: Channel, 1;2;3;4;5;6;7;8
char param11[CRSF_MAX_PACKET_LEN] = {0xEA, 0x25, 0x2B, 0xEA, 0xEE, 0xB, 0x0, 0x9, 0x9, 0x43, 0x68, 0x61, 0x6E, 0x6E, 0x65, 0x6C, 0x0, 0x31, 0x3B, 0x32, 0x3B, 0x33, 0x3B, 0x34, 0x3B, 0x35, 0x3B, 0x36, 0x3B, 0x37, 0x3B, 0x38, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x66, 0x57, 0x3B, 0x32, 0x35, 0x30, 0x6D, 0x57, 0x3B, 0x35, 0x30, 0x30, 0x6D, 0x57, 0x3B, 0x31, 0x30, 0x30, 0x30, 0x6D, 0x57, 0x3B, 0x32, 0x30, 0x30, 0xE7};

//Param: Pwr Lvl, -;1;2;3;4;5;6;7;8
char param12[CRSF_MAX_PACKET_LEN] = {0xEA, 0x27, 0x2B, 0xEA, 0xEE, 0xC, 0x0, 0x9, 0x9, 0x50, 0x77, 0x72, 0x20, 0x4C, 0x76, 0x6C, 0x0, 0x2D, 0x3B, 0x31, 0x3B, 0x32, 0x3B, 0x33, 0x3B, 0x34, 0x3B, 0x35, 0x3B, 0x36, 0x3B, 0x37, 0x3B, 0x38, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x50, 0x32, 0x35, 0x30, 0x6D, 0x57, 0x3B, 0x35, 0x30, 0x30, 0x6D, 0x57, 0x3B, 0x31, 0x30, 0x30, 0x30, 0x6D, 0x57, 0x3B, 0x32, 0x30, 0x30, 0xE7};

// Param: Pitmode, Off;On;AUX1▒;AUX1▒;AUX2▒;AUX2▒;AUX3▒;AUX3▒;AP
char param13[CRSF_MAX_PACKET_LEN] = {0xEA, 0x3E, 0x2B, 0xEA, 0xEE, 0xD, 0x2, 0x9, 0x9, 0x50, 0x69, 0x74, 0x6D, 0x6F, 0x64, 0x65, 0x0, 0x4F, 0x66, 0x66, 0x3B, 0x4F, 0x6E, 0x3B, 0x41, 0x55, 0x58, 0x31, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x31, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0xCC};

// Param: Send VTx,
char param14[CRSF_MAX_PACKET_LEN] = {0xEA, 0x14, 0x2B, 0xEA, 0xEE, 0xE, 0x0, 0x9, 0xD, 0x53, 0x65, 0x6E, 0x64, 0x20, 0x56, 0x54, 0x78, 0x0, 0x0, 0xC8, 0x0, 0xBE, 0x6E, 0x3B, 0x41, 0x55, 0x58, 0x31, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x31, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0xCC};

// Param: WiFi Connectivit,
char param15[CRSF_MAX_PACKET_LEN] = {0xEA, 0x1A, 0x2B, 0xEA, 0xEE, 0xF, 0x0, 0x0, 0xB, 0x57, 0x69, 0x46, 0x69, 0x20, 0x43, 0x6F, 0x6E, 0x6E, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x0, 0x81, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x31, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0xCC};

// Param: Enable WiFi,
char param16[CRSF_MAX_PACKET_LEN] = {0xEA, 0x17, 0x2B, 0xEA, 0xEE, 0x10, 0x0, 0xF, 0xD, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x20, 0x57, 0x69, 0x46, 0x69, 0x0, 0x0, 0xC8, 0x0, 0xCD, 0x79, 0x0, 0x81, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x31, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0xCC};

// Param: Enable Rx WiFi,
char param17[CRSF_MAX_PACKET_LEN] = {0xEA, 0x1A, 0x2B, 0xEA, 0xEE, 0x11, 0x0, 0xF, 0xD, 0x45, 0x6E, 0x61, 0x62, 0x6C, 0x65, 0x20, 0x52, 0x78, 0x20, 0x57, 0x69, 0x46, 0x69, 0x0, 0x0, 0xC8, 0x0, 0x8D, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x31, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0xCC};

// Param: BLE Joystick,
char param18[CRSF_MAX_PACKET_LEN] = {0xEA, 0x18, 0x2B, 0xEA, 0xEE, 0x12, 0x0, 0x0, 0xD, 0x42, 0x4C, 0x45, 0x20, 0x4A, 0x6F, 0x79, 0x73, 0x74, 0x69, 0x63, 0x6B, 0x0, 0x0, 0xC8, 0x0, 0x22, 0x0, 0x8D, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x31, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0xCC};

// Param: Bind,
char param19[CRSF_MAX_PACKET_LEN] = {0xEA, 0x10, 0x2B, 0xEA, 0xEE, 0x13, 0x0, 0x0, 0xD, 0x42, 0x69, 0x6E, 0x64, 0x0, 0x0, 0xC8, 0x0, 0x8D, 0x69, 0x63, 0x6B, 0x0, 0x0, 0xC8, 0x0, 0x22, 0x0, 0x8D, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x31, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0xCC};

// Param: Bad/Good, 0/
char param20[CRSF_MAX_PACKET_LEN] = {0xEA, 0x15, 0x2B, 0xEA, 0xEE, 0x14, 0x0, 0x0, 0xC, 0x42, 0x61, 0x64, 0x2F, 0x47, 0x6F, 0x6F, 0x64, 0x0, 0x30, 0x2F, 0x30, 0x0, 0x7D, 0xC8, 0x0, 0x22, 0x0, 0x8D, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x31, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0xCC};

// Param: 3.3.2 ISM2G4, 2d989
char param21[CRSF_MAX_PACKET_LEN] = {0xEA, 0x1C, 0x2B, 0xEA, 0xEE, 0x15, 0x0, 0x0, 0xC, 0x33, 0x2E, 0x33, 0x2E, 0x32, 0x20, 0x49, 0x53, 0x4D, 0x32, 0x47, 0x34, 0x0, 0x32, 0x64, 0x39, 0x38, 0x39, 0x31, 0x0, 0x8A, 0x41, 0x55, 0x58, 0x31, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x32, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC0, 0x3B, 0x41, 0x55, 0x58, 0x33, 0xC1, 0x3B, 0x41, 0x55, 0x58, 0xCC};

    


char param_cmd[CRSF_MAX_PACKET_LEN] = {0xEA, 0x1A, 0x2B, 0xEA, 0xEE, 0x0F, 0x00, 0x00, 0x0B, 0x57, 0x69, 0x46, 0x69, 0x20, 0x43, 0x6F, 0x6E, 0x6E, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x00, 0x81};




2B EA EE 01 00 29 00 03 00 09 00 00 0B 30 34 64 42 6D 29 3B 44 35 30 30 28 2D 31 30 34 64 42 6D 29 3B 46 35 30 30 28 2D 31 30 34 64 42 6D 29 3B 46 31 30 30 30 28 2D 31 30 34 64 42 6D E8 EE 15 00 00 53 52 4C 45 00 00 00 00 02 03 03 00 44 49 59 32 34 30 30 20 45 32 38 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00



2B EA EE 02 00 61 63 65 00 00 00 09 00 20 28 31 3A 36 34 29 00 1A 3B 4F 66 66 3B 31 3A 31 32 38 3B 31 3A 36 34 3B 31 3A 33 32 3B 31 3A 31 36 3B 31 3A 38 3B 31 3A 34 3B 31 3A 32 3B 52 B8 EE 15 00 00 53 52 4C 45



2B EA EE 03 00 00 09 53 77 69 74 63 68 20 4D 6F 64 65 00 57 69 64 65 3B 48 79 62 72 69



2B EA EE 04 00 00 09 4D 6F 64 65 6C 20 4D 61 74 63 68 00 4F 66 66 3B 4F 6E 00 00 00 01 00 20 28



2B EA EE 05 00 00 0B 54 58 20 50 6F 77 65 72 20 28



2B EA EE 06 00 05 09 4D 61 78 20 50 6F 77 65 72 00 31 30 3B 32 35 3B 35 30 3B 31 30 30 3B 32 35 30 00



2B EA EE 07 00 05 09 44 79 6E 61 6D 69 63 00 4F 66 66 3B 44 79 6E 3B 41 55 58 39 3B 41 55 58 31 30 3B 41 55 58 31 31 3B 41 55 58 31



2B EA EE 08 00 30 6D 57 3B 4E 65 76 65 72 00 04 00 08 00 00 95 57 3B 32 35 6D 57 3B 35 30 6D 57 3B 31 30 30 6D 57 3B 32 35 30 6D 57 3B 35 30 30 6D 57 3B 31 30 30 30 6D 57 3B 32 30 30 E7 EE 15 00 00 53 52 4C



2B EA EE 09 00 00 0B 56 54 58 20 41 64 6D 69 6E 69 73



2B EA EE 0A 00 09 09 42 61 6E 64 00 4F 66 66 3B 41 3B 42 3B 45 3B 46 3B 52 3B



2B EA EE 0B 00 09 09 43 68 61 6E 6E 65 6C 00 31 3B 32 3B 33 3B 34 3B 35 3B 36 3B 37 3B



2B EA EE 0C 00 09 09 50 77 72 20 4C 76 6C 00 2D 3B 31 3B 32 3B 33 3B 34 3B 35 3B 36 3B 37 3B



2B EA EE 0D 00 3B 41 55 58 39 C0 3B 41 55 58 39 C1 3B 41 55 58 31 30 C0 3B 41 55 58 31 30 C1 00 00 00 15 00 00 80 41 55 58 37 C0 3B 41 55 58 37 C1 3B 41 55 58 38 C0 3B 41 55 58 38 C1 EB EE 15 00 00 53 52 4C 45 00 00 00 00 02 03 03 00 44 49 59 32 34 30 30 20 45 32 38 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00



2B EA EE 0E 00 09 0D 53 65 6E 64 20



2B EA EE 0F 00 00 0B 57 69 46 69 20 43 6F 6E 6E 65 63



2B EA EE 10 00 0F 0D 45 6E 61 62 6C 65 20 57



2B EA EE 11 00 0F 0D 45 6E 61 62 6C 65 20 52 78 20 57



2B EA EE 12 00 00 0D 42 4C 45 20 4A 6F 79 73 74



2B EA EE 13 00 00 0D 42



2B EA EE 14 00 00 0C 42 61 64 2F 47 6F 6F 64



2B EA EE 15 00 00 0C 33 2E 33 2E 32 20 49 53 4D 32 47 34 00
